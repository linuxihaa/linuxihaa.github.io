{"pageProps":{"page":{"slug":"2016-08-11_raid","layout":"post","jdate":"Thu Aug 11 2016 00:00:00 GMT+0000","user":"rmasoumvand","title":"راه اندازی RAID در لینوکس","categories":["آموزشی"],"tags":["پیکربندی"],"featured":"linux-raid.jpeg","keywords":["raid در لینوکس","linux raid","mdadm raid","linux mdadm raid"],"description":"آموزش راه اندازی RAID در لینوکس","timeToRead":5,"content":"\nRAID مخفف Redundant Array of Independent Disks مکانیزمی است که در آن مجموعه‌ای از دیسک‌ها به‌صورت زنجیره‌ای به هم متصل می‌شوند و موجب افزایش کارایی و دسترسی‌پذیری به داده‌ها و همچنین تحمل خطاپذیری و بازیابی داده‌های ذخیره شده می‌شود.\n\n## انواع RAID\n\n*   Hardware RAID: که به‌صورت سخت‌افزاری و مستقل از سیستم‌عامل عمل می‌کند و تمامی عملیات توسط RAID Controller سیستم انجام می‌شود.\n*   Software RAID: که توسط سیستم‌عامل و نرم‌افزار پیکربندی و کنترل می‌شود.\n\n## سطوح RIAD\n\nRAID می‌تواند به‌صورت‌های مختلفی پیاده‌سازی شود که در ادامه به معرفی کاربردی‌ترین آن‌ها می‌پردازیم.\n\n*   RAID 0 یا Striping: در این روش داده‌ها به‌صورت تکه‌تکه شده و هر تکه در یک دیسک ذخیره می‌شود که موجب افزایش سرعت خواندن/نوشتن می گردد. در این روش امکان تحمل خطاپذیری و بازیابی داده‌ها وجود ندارد و در صورت خرابی یکی از دیسک ها داده‌ها از بین خواهد رفت.\n\n*   RAID 1 یا Mirroring: در این روش داده‌های نوشته شده روی یک دیسک عیناً روی دیسک دیگر کپی می‌شود. در این روش سرعت خواندن/نوشتن افزایش نمی‌یابد ولی امکان تحمل خطاپذیری و بازیابی داده‌ها در زمانی خرابی یکی از دیسک‌ها وجود دارد.\n\n*   RAID 5 یا Striped with Parity: در این روش داده‌ها همانند روش Striping به‌صورت تکه‌تکه شده بین دیسک‌ها تقسیم و ذخیره می‌شود با این تفاوت که علاوه بر داده‌های ذخیره شده نوعی داده تحت عنوان Parity نیز در دیسک‌ها ذخیره می‌گردد. در این روش سرعت خواندن/نوشتن افزایش می‌یابد و همچنین بدلیل استفاده از Parity امکان تحمل خطاپذیری و بازیابی داده‌ها در زمان خرابی یکی از دیسک‌ها وجود دارد.\n\n*   RAID 6 یا Striped with Double Parity: این روش در‌واقع نسخه توسعه یافته RAID 5 می‌باشد با این‌ تفاوت که در این روش از دو بلوک مجزا Parity استفاده می‌شود که موجب می‌شود امکان تحمل خطاپذیری و بازیابی داده‌ها افزایش یابد.\n\nدر این آموزش به نصب و راه‌اندازی RAID نرم‌افزاری در لینوکس خواهیم پرداخت.\n\n## نصب و راه‌اندازی RIAD در لینوکس\n\nابتدا می‌بایست نرم‌افزار mdadm را نصب کنیم.\n\nبرای سیستم‌های مبتنی بر دبیان:\n\n```sh\nsudo apt install mdadm\n```\n\nبرای سیستم‌های مبتنی بر ردهت:\n\n```sh\nsudo yum install mdadm\n```\n\nبرای ایجاد یک Raid Array به‌صورت زیر عمل می‌کنیم.\n\n```sh\nmdadm [mode] <raiddevice> [options] <component-devices>\n```\n\nدستور mdadm شامل تعدادی گزینه است که در ادامه به توضییح مهمترین آن‌ها می‌پردازیم.\n\n**mode:** حالت عملیاتی را مشخص می‌کند و می‌تواند یکی از گزینه های زیر باشد.\n\n*   C- یا create--: یک array جدید ایجاد می‌کند\n*   A- یا assemble--: اجزای یک array از پیش ساخته را به هم ملحق می‌کند.\n*   ‌B- یا build--: یک array قدیمی بدون superblock ایجاد می‌کند.\n*   F- یا follow , --monitor--: برای مانیتور کردن یک یا چند array استفاده می‌شود.\n*   G- یا grow--: اندازه یک array فعال را تغییر می‌دهد\n*   manage--: برای انجام کارهایی چون اضافه نمودن دیسک جدید و یا حدف نمودن دیسک های معیوب از array به‌کار می‌رود.\n\n*   raiddevice: محل و نام Array را مشخص می‌کند. برای مثال dev/md0/\n\n**options:** می‌تواند گزینه‌های زیر را شامل شود.\n\n*   n- یا =raid-devices--: تعداد دیسک های فعال در array را مشخص می‌کند.\n*   x- یا =spare-devices--: تعداد دیسک های یدک را مشخص می‌کند.\n*   l- یا =level--: سطح RAID را مشخص می‌کند\n*   s- یا scan--: فایل کانفیگ یا فایل proc/mdstat/ را برای یافتن اطلاعات مربوط جستجو می‌کند.\n*   e- یا =metadata--: مدل metadata استفاده شده برای array را مشخص می‌کند. مقدار پیشفرض 1.2 می‌باشد\n*   v- یا verbose—:‌ جهت نمایش اطلاعات بیشتر در رابطه با عملیات در حال انجام استفاده می‌شود.\n\nو …\n\nmdadm دارای گزینه‌های بسیاری است که می‌توانید جهت مطالعه آن‌ها به مستندات Man Pages این برنامه مراجعه کنید\n\n```sh\nman mdadm\n```\n\nبرای ایجاد یک array از نوع raid 1 به‌صورت زیر عمل می‌کنیم.\n\n```sh\nmdadm –create /dev/md0 –level=1 –raid-devices=2 /dev/sda /dev/sdb –spare-devices=1 /dev/sdc\n```\n\nدر اینجا ما یک array از نوع raid 1 یا mirroring با دو دیسک به نام‌های sda و sdb ایجاد نمودیم؛ همچنین یک دیسک sdc را هم به‌عنوان دیسک یدک برای مواقعی که یکی از دیسک های فعال دچار مشکل شد به array اضافه نمودیم.\n\nبرای مشاهده وضعیت array ایجاد شده دستور زیر را وارد می‌کنیم.\n\n```sh\nmdadm –detail /dev/md0\n```\n\nپس از اجرای دستور فوق خروجی زیر را خواهیم داشت.\n\n```\n/dev/md0:\n        Version : 1.2\n  Creation Time : Wed Aug 10 11:36:54 2016\n     Raid Level : raid1\n     Array Size : 8380416 (7.99 GiB 8.58 GB)\n  Used Dev Size : 8380416 (7.99 GiB 8.58 GB)\n   Raid Devices : 2\n  Total Devices : 3\n    Persistence : Superblock is persistent\n\n    Update Time : Wed Aug 10 11:55:45 2016\n          State : clean \n Active Devices : 2\nWorking Devices : 3\n Failed Devices : 0\n  Spare Devices : 1\n\n           Name : debian:0  (local to host debian)\n           UUID : d26d12cf:b0037b53:cfb06317:a06a841b\n         Events : 20\n\n    Number   Major   Minor   RaidDevice State\n       0       8       16        0      active sync   /dev/sda\n       1       8       32        1      active sync   /dev/sdb\n\n       2       8       48        -      spare   /dev/sdc\n```\n\n**نکته: می‌توانیم به‌جای وارد نمودن شماره سطح از عنوان سطح مورد نظر برای گزینه level-- استفاده کنیم.**\n\nبرای مثال دستور زیر یک array از نوع raid 0 یا stripe ایجاد می‌کند.\n\n```sh\nmdadm –create /dev/md0 –level=stripe –raid-devices=2 /dev/sda /dev/sdb\n```\n\nبرای ذخیره تنظیمات به‌صورت زیر عمل می‌کنیم.\n\n```sh\nmdadm –detail –scan /etc/mdadm/mdadm.conf\n```\n\nجهت مشاهده وضعیت array ایجاد شده دستور زیر را وارد \nمی‌کنیم.\n\n```sh\ncat /proc/mdstat\n```\n\nکه در صورت فعال بودن و تعریف نمودن array خروجی زیر را خواهیم داشت.\n\n```\nPersonalities : [raid6] [raid5] [raid4] [raid1] \nmd0 : active raid1 sdc[2](S) sdb[1] sda[0]\n      8380416 blocks super 1.2 [2/2] [UU]\n      \nunused devices: <none>\n```\n\nسپس می‌توانیم array ایجاد شده را با فرمت فایل سیستم مورد نظرمان توسط دستور mkfs به‌صورت زیر فرمت کنیم.\n\n```sh\nmkfs -t ext4 /dev/md0\n```\n\nو در نهایت array ایجاد شده را ماونت می‌کنیم.\n\n```sh\nmount /dev/md0 /mnt\n```\n\nدر صورتی که بخواهیم array مورد نظر را غیرفعال کنیم دستور زیر را وارد می‌کنیم.\n\n```sh\nmdadm –stop /dev/md0\n```\n\nکه در اینجا md0 غیرفعال گردید و برای فعال نمودن مجدد array به صورت زیر عمل می‌کنیم.\n\n```sh\nmdadm –assemble –scan\n```\n\nبرای حدف یک دیسک از array بصورت زیر عمل می‌کنیم.\n\nابتدا توسط دستور زیر دیسک را به حالت fail تغییر وضعیت می‌دهیم.\n\n```sh\nmdadm /dev/md0 –fail /dev/sdc\n```\n\nسپس دستور زیر را برای حذف دیسک از array وارد می‌کنیم.\n\n```sh\nmdadm /dev/md0 –remove /dev/sdc\n```\n\nو برای اضافه نمودن مجدد یک دیسک به array دستور زیر را وارد می‌کنیم.\n\n```sh\nmdadm /dev/md0 –add /dev/sdc\n```\n"}},"__N_SSG":true}