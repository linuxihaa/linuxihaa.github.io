{"pageProps":{"page":{"slug":"2016-09-08_btrfs","layout":"post","jdate":"Thu Sep 08 2016 00:00:00 GMT+0000","user":"rmasoumvand","title":"فایل سیستم Btrfs","categories":["آموزشی"],"tags":["پیکربندی"],"featured":"linux-btrfs.jpeg","keywords":["btrfs","btrfs لینوکس","فایل سیستم btrfs"],"description":"معرفی Btrfs و آموزش پیاده‌سازی کامل Btrfs در لینوکس","timeToRead":5,"content":"\nBtrfs یا B-tree Filesystem یک فایل سیستم متن باز مبتنی بر مجوز GPL است که توسط شرکت هایی  چون لینوکس فاندیشن، فیسبوک، اینتل، فوجیتسو، ردهت، اوراکل، سوزه و ... توسعه داده می شود.\n\nاین فایل سیستم دیسک‌های با ظرفیت حداکثر ۱۶ اگزابایت و فایل‌های با اندازه حداکثر ۸ اگزابایت را پشتیبانی می‌کند.\n\nبرای نامگذاری فایل‌های ایجاد شده روی این فایل سیستم تقریباً می‌توان از هر کاراکتری جز '/' و NULL استفاده نمود.\n\nبرخی ‌از ویژگی‌های مهم Btrfs عبارتند از:\n\n*   یکپارچه سازی دیسک (Defragmention) به‌صورت آنلاین\n*   تغییر اندازه پارتیشن ها (Volume) به‌صورت آنلاین\n*   حدف یا اضافه نمودن دیسک های سخت به‌صورت آنلاین\n*   بررسی فایل سیستم (Fsck) به‌صورت آفلاین\n*   بررسی فایل‌ها و برطرف نمودن خودکار مشکلات آن‌ها به‌صورت آنلاین (Data Scrubbing)\n*   پشتیبانی از RAID0 , RAID1, RAID10\n*   پشتیبانی از Subvolume ها\n*   فشرده سازی (Transparent Compression)\n*   بررسی Checksum روی داده‌ها و Metadata\n*  و …\n\nBtrfs در اکثر توزیع‌های معروف به‌صورت پیش‌فرض پشتیبانی می‌شود و برای استفاده از آن فقط می‌بایست ابزارهای مربوط به آن را در توزیع خود نصب کنیم.\n\n*   برای نصب در سیستم‌های مبتنی بر دبیان:\n\n```sh\napt install btrfs-tools\n```\n\n*   برای نصب در سیستم‌های مبتنی بر ردهت:\n\n```sh\nyum install btrfs-progs\n```\n\nیکی از خصوصیات جالب Btrfs این است که شما می‌توانید فایل سیستم را روی یک یا چند دیسک خام و پارتیشن‌بندی‌نشده ایجاد کنید. برای مثال نیازی به استفاده از ابزارهایی همچون fdisk برای پارتیشن بندی نیست.\n\nبرای مثال برای ایجاد فایل سیستم Btrfs بر روی سه دیسک sdb, sdc, sdd دستور زیر را وارد می کنیم:\n\n```sh\nmkfs.btrfs /dev/sdb /dev/sdc /dev/sdd\n```\n\nپس از اجرای دستور فوق خروجی بصورت زیر خواهد بود:\n\n```\nBtrfs v3.17\nSee http://btrfs.wiki.kernel.org for more information.\n\nTurning ON incompat feature 'extref': increased hardlink limit per file to 65536\nadding device /dev/sdc id 2\nadding device /dev/sdd id 3\nfs created label (null) on /dev/sdb\n\tnodesize 16384 leafsize 16384 sectorsize 4096 size 24.00GiB\n```\n\n*   **نکته) در صورتی که دستور mkfs.btrfs رو بدون هیچ سوییچ و همراه با چند دیسک به‌کار ببریم به‌صورت پیش‌فرض از RAID0 (Stripe)برای ذخیره سازی داده‌ها و از (Mirror) RAID1 برای ذخیره‌سازی Metadata استفاده می‌شود. مزییت این روش در این است که علاوه بر بهبود سرعت خواندن و نوشتن داده‌ها در صورتی که یکی از دیسک‌ها دچار مشکل شود به کمک Metadata می‌توانیم داده‌های از دست رفته را بازسازی کنیم.**\n\nاگر مایل هستید که btrfs رو تنها روی یک دیسک ایجاد کنید و یا مایل نیستید که Data و Metadata بصورت RAID ذخیره سازی شود می‌توانید از سوییچ m- بصورت زیر استفاده نمایید:\n\n```sh\nmkfs.btrfs -m single /dev/sdb\n```\n\nهمچنین در صورتی که بخواهید همین کار را با چندین دیسک انجام دهید نیز می‌توانید به‌صورت زیر عمل نمایید:\n\n```sh\nmkfs.btrfs -m raid0 /dev/sdb /dev/sdc /dev/sdd\n```\n\nکه در مثال فوق برای ذخیره‌سازی Metadata از RAID0 (Stripe) بجای RAID1 (گزینه پیشفرض) استفاده می گردد.\n\nهمچنین می‌توانیم نحوه ذخیره‌سازی Data و Metadata را به دلخواه خودمان تعریف کنیم. برای مثال:\n\n```sh\nmkfs.btrfs -m raid0 -d raid1 /dev/sdb /dev/sdc /dev/sdd\n```\n\nکه در مثال فوق توسط سوییچ‌های m- و d- نحوه ذخیره‌سازی مشخص گردیده است.\n\n*   **نکته) می‌توانیم از RAID10 نیز برای ذخیره‌سازی Data و Metadata استفاده کنیم اما می‌بایست توجه داشته باشید که برای استفاده از RAID10 حداقل به ۴ دیسک نیاز است.**\n\nبرای مشاهده وضعیت فایل سیستم ایجاد شده دستور زیر را وارد می کنیم:\n\n```sh\nbtrfs filesystem show /dev/sdb\n```\n\n*   **نکته) از آنجایی که در مثال فوق برای نشان دادن قابلیت‌های RAID در Btrfs از 3 دیسک استفاده نمودیم بنابراین برای نمایش اطلاعات فایل‌سیستم توسط دستور فوق هیچ فرقی نمی‌کند که نام کدام دیسک را اعلام کنیم چرا که هر 3 دیسک مربوط به یک فایل سیستم و در قالب یک Pool می‌باشد.**\n\nکه خروجی آن به‌صورت زیر خواهد بود:\n\n```\nLabel: none  uuid: f36e0a56-bcea-4637-a1e4-c9788574d84a\n\tTotal devices 3 FS bytes used 112.00KiB\n\tdevid    1 size 8.00GiB used 1.82GiB path /dev/sdb\n\tdevid    2 size 8.00GiB used 827.19MiB path /dev/sdc\n\tdevid    3 size 8.00GiB used 1.81GiB path /dev/sdd\n\nBtrfs v3.17\n```\n\nپس از ایجاد فایل سیستم می‌توانیم به راحتی و توسط دستور زیر انرا Mount نماییم:\n\n```sh\nmount /dev/sdb /mnt\n```\n\nبرای مشاهده فضای مصرفی و فضای باقی‌مانده فایل سیستم دستور زیر را وارد می کنیم:\n\n```sh\nbtrfs filesystem df /mnt\n```\n\nکه خروجی آن به‌صورت زیر خواهد بود:\n\n```\nData, RAID0: total=2.40GiB, used=832.00KiB\nData, single: total=8.00MiB, used=0.00B\nSystem, RAID1: total=8.00MiB, used=16.00KiB\nSystem, single: total=4.00MiB, used=0.00B\nMetadata, RAID1: total=1.00GiB, used=112.00KiB\nMetadata, single: total=8.00MiB, used=0.00B\nGlobalReserve, single: total=16.00MiB, used=0.00B\n```\n\nیکی از ویژگی‌های Btrfs قابلیت فشرده‌سازی داده‌ها می‌باشد که موجب می‌شود داده‌ها به‌صورت فشرده‌شده روی دیسک ذخیره شوند که موجب صرفه‌جویی در مصرف فضای دیسک می‌گردد. Btrfs از دو متد فشرده‌سازی zlib و lzo برای فشرده‌سازی استفاده می‌کند.\n\n*   **نکته) Btrfs بصورت پیش‌فرض از zlib برای فشرده‌سازی استفاده می کند.**\n\nبرای فعال نمودن قابلیت فشرده‌سازی کافی است که دیسک مورد نظر را بصورت زیر Mount کنیم:\n\n```sh\nmount -o compress=lzo /dev/sdb /mnt\n```\n\nیا\n\n```sh\nmount -o compress=zlib /dev/sdb /mnt\n```\n\nیا\n\n```sh\nmount -o compress /dev/sdb /mnt\n```\n\nکه دستور اول با استفاده از lzo و در دستور دوم با استفاده از zlib اقدام به فشرده‌سازی داده‌ها می کند. در دستور سوم هم از گزینه پیشفرض (zlib) برای فشرده‌سازی استفاده می‌شود.\n\n*   **نکته) زمانی که یک دیسک را با قابلیت فشرده‌سازی Mount می‌کنید توجه داشته باشید که تنها داده‌هایی که از آن پس در دیسک ذخیره خواهند شد فشرده می گردند.**\n\nاز دیگر ویژگی‌های Btrfs امکان تغییر حجم Volume ها به‌صورت آنلاین می باشد. به‌عنوان مثال دستور زیر مقدار 2G از فضای فایل سیستم mnt/ می کاهد.\n\n```sh\nbtrfs filesystem resize -2g /mnt\n```\n\nو دستور زیر مقدار 500M به فضای فایل سیستم mnt/ اضافه می‌کند.\n\n```sh\nbtrfs filesystem resize +500m /mnt\n```\n\nبرای اضافه نمودن دیسک جدید به فایل‌سیستم مورد نظرمان به‌صورت زیر عمل می کنیم.\n\n```sh\nbtrfs device add /dev/sde /mnt\n```\n\nسپس دستور زیر را جهت مشاهده وضعیت فایل‌سیستم وارد می کنیم.\n\n```sh\nbtrfs filesystem show /dev/sdb\n```\n\nکه خروجی آن به‌صورت زیر خواهد بود.\n\n```\nLabel: none  uuid: f36e0a56-bcea-4637-a1e4-c9788574d84a\n\tTotal devices 4 FS bytes used 960.00KiB\n\tdevid    1 size 8.00GiB used 1.82GiB path /dev/sdb\n\tdevid    2 size 8.00GiB used 827.19MiB path /dev/sdc\n\tdevid    3 size 8.00GiB used 1.81GiB path /dev/sdd\n\tdevid    4 size 8.00GiB used 0.00B path /dev/sde\n\nBtrfs v3.17\n```\n\nهمان‌طور که مشاهده می‌کنید دیسک sde به فایل‌سیستم اضافه شد با این حال در حال حاضر از فضای آن استفاده نمی‌شود. برای اینکه بتوان از فضای دیسک جدید هم استفاده نمود می‌بایست دستور زیر را وارد کنیم.\n\n```sh\nbtrfs filesystem balance /mnt\n```\n\nکه پس از اجرای دستور فوق خروجی به شکل زیر خواهد بود.\n\n```\nDone, had to relocate 6 out of 6 chunks\n```\nبرای حذف یک دیسک از فایل سیستم دستور زیر را وارد می‌کنیم.\n\n```sh\nbtrfs device delete /dev/sdc /mnt\n```\n\nدر صورتی که بخواهیم RAID Level را برای فایل سیستم ایجاد شده تغییر دهیم می‌توانیم به‌صورت زیر عمل کنیم.\n\n```sh\nbtrfs balance start -dconvert=raid1 -mconvert=raid1 /mnt\n```\n\nیکی دیگر از قابلیت‌های جالب در btrfs مفهومی به نام Subvolume است. در btrfs می‌توانیم در هر فایل سیستم Subvolume هایی ایجاد کنیم و سپس از این Subvolume ها Snapshot بگیریم و یا آن‌ها را به‌صورت مستقل از فایل سیستم اصلی Mount کنیم.\n\nبرای ایجاد یک Subvolume دستور زیر را وارد می کنیم.\n\n```sh\nbtrfs subvolume create /mnt/sv1\n```\n\nدر مثال فوق یک Subvolume با نام sv1 در فایل سیستم mnt/ ایجاد گردید.\n\nبرای نمایش وضعیت Subvolume ها در فایل سیستم mnt/ دستور زیر را وارد می کنیم.\n\n```sh\nbtrfs subvolume list /mnt\n```\n\nکه خروجی آن به‌صورت زیر خواهد بود.\n\n```\nID 272 gen 136 top level 5 path sv1\n```\n\nهمانطور که مشاهده می‌کنید هر Subvolume یک ID منحصر به فرد دارد که به آن Subvolume اشاره می‌کند.\n\nهمچنین می‌توانیم یک Subvolume را درون Subvolume دیگری ایجاد کنیم.\n\n```sh\nbtrfs subvolume create /mnt/sv1/sv2\n```\n\nبرای Mount نمودن یک Subvolume به‌صورت زیر عمل می کنیم:\n\nابتدا می‌بایست فایل‌سیستم اصلی را در صورتی که Mount می‌باشد Unmount کنیم.\n\n```sh\numount /mnt\n```\n\nو سپس توسط دستور زیر و به وسیله Subvolume ID آن را به‌صورت زیر Mount می کنیم.\n\n```sh\nmount -o subvolid=272 /dev/sdb /mnt\n```\n\nکه در اینجا Subvolume ID مورد نظر ما 266 است. همچنین می‌توانیم به جای استفاده از ID از نام Subvolume استفاده کنیم.\n\n```sh\nmount -o subvol=sv1 /dev/sdb /mnt\n```\n\n*   **نکته)‌ ID مربوط به Volume ریشه همواره 0 است.**\n\nبرای تغییر Default Volume در زمان Mount می‌توانیم به‌صورت زیر عمل کنیم.\n\n```sh\nbtrfs subvolume set-default 266 /mnt\n```\n\nاز این پس هنگام Mount نمودن فایل‌سیستم، به جای Volume ریشه Subvolume مشخص شده به‌صورت پیشفرض Mount می‌گردد.\n\nبرای حدف یک Subvolume دستور زیر را وارد می کنیم.\n\n```sh\nbtrfs subvolume delete /mnt/sv1\n```\n\nدستور فوق Subvolume با نام sv1 را حذف می کند.\n\nیکی دیگر از امکانات مفید btrfs امکان تهیه Snapshot از Subvolume ها به‌صورت آنلاین است. توسط Snapshot ها می‌توانیم از Data های ذخیره شده در Subvolume ها کپی پشتیبان تهیه کنیم تا در مواقع لزوم Data ها را به حالت اولیه بازگردانیم.\n\nبرای تهیه Snapshot دستور زیر را وارد می‌کنیم.\n\n```sh\nbtrfs subvolume snapshot /mnt/sv1 /mnt/sv1_snapshot\n```\n\nتوسط دستور فوق یک Snapshot با نام sv1_snapshot از sv1 تهیه شد.\n\nسپس می‌توانیم این Snapshot را در مواقع لزوم مستقیماً Mount کنیم و از اطلاعات ذخیره شده استفاده کنیم.\n\n```sh\nmount -o subvol=sv1_snapshot /dev/sdb /mnt\n```\n\nبرای یکپارچه‌سازی (Defragment) فایل سیستم دستور زیر را وارد می کنیم.\n\n```sh\nbtrfs filesystem defrag /mnt\n```\n\nهمچنین می توانیم توسط دستور زیر فایل‌سیستم را با قابلیت یکپارچه‌سازی خودکار Mount کنیم.\n\n```sh\nmount -o autodefrag /dev/sdb /mnt\n```\n"}},"__N_SSG":true}